/* line 5, ../../../../../../../Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.0.alpha.19/stylesheets/compass/reset/_utilities.scss */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}

/* line 22, ../../../../../../../Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.0.alpha.19/stylesheets/compass/reset/_utilities.scss */
html {
  line-height: 1;
}

/* line 24, ../../../../../../../Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.0.alpha.19/stylesheets/compass/reset/_utilities.scss */
ol, ul {
  list-style: none;
}

/* line 26, ../../../../../../../Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.0.alpha.19/stylesheets/compass/reset/_utilities.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* line 28, ../../../../../../../Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.0.alpha.19/stylesheets/compass/reset/_utilities.scss */
caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}

/* line 30, ../../../../../../../Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.0.alpha.19/stylesheets/compass/reset/_utilities.scss */
q, blockquote {
  quotes: none;
}
/* line 103, ../../../../../../../Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.0.alpha.19/stylesheets/compass/reset/_utilities.scss */
q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none;
}

/* line 32, ../../../../../../../Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.0.alpha.19/stylesheets/compass/reset/_utilities.scss */
a img {
  border: none;
}

/* line 116, ../../../../../../../Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.0.alpha.19/stylesheets/compass/reset/_utilities.scss */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block;
}

/* line 99, ../scss/gridle/_silent-classes.scss */
.gridle-debug main .item.item--agar, main .item.item--agar.gridle-debug {
  background-color: #dae7e9 !important;
}

/**
 * Map set
 *
 * @param 	Map 	$map 		The map to use
 * @param 	String 	$key 		The key to update
 * @param 	Mixed 	$value 		The new value
 * @return 	Map 			The new map
 */
/**
 * Get the column width in percent for the global or a specific context
 *
 * @param 	int 		$columns 					The number of columns to calculate
 * @param 	int 		$context : $gridle-columns-count 	 	The context to use
 * @return 	percentage 							The width in percent
 */
/**
 *  Get a state map
 *
 * @param 	string 		$name 		The name of the state to get
 * @return 	map 				A state map object
 */
/**
 * Check if a state exist :
 *
 * @param 	string 		$name 		The name of the state to check
 * @return 	Boolean 			true is exist
 */
/**
 * Get the media queries variables :
 *
 * @param 	int 		$index 	 	The media query indes
 * @param 	String 		$var 		The media query variable name
 * @return 	String|int 			The variable value
 */
/**
 * Get a variable
 *
 * @param 	String 		$varName 				The variable name
 * @param  	String 		$stateMap-or-stateName 	 	The state name or a map state value
 * @return 	Mixed 							The finded value
 */
/**
 * Set a variable in a state
 * @param 	Mixed $stateName-or-stateIndex 	The state name of state index
 * @param  	String $var                    		Variable name to assign
 * @param  	Mixed $newValue          		The new value to assign
 * @return 	List                         			The states list (full)
 */
/**
 * Generate a column
 *
 * @param 	String 		$name 			The column name (often count)
 * @param 	int 		$columns 		The column count that the column will take
 * @param 	int 		$context 		The context on witch the with will be calculed
 * @param 	Boolean 	$generateClasses 	Set if the column has to be generated in css
 */
/**
 * Generate classname
 *
 * @param 	List 		$parrern 	The pattern to use to generate classname
 * @param 	String 		$state 		The state
 * @param 	int 		$count 		The column count
 */
/**
 * Get the media query for a particular state, or with, etc...
 *
 * @param 	Mixed 		$state-or-min-width 		The state name of the min with
 * @param 	Mixed 		$max-width 			The max width if first param is a min width
 * @return 	String 						The media query string without the @media
 */
/**
 * Get states count
 * 
 * @return 	int 	The number of states defined
 */
/**
 * Setup
 */
/**
 *  Register a clear each class
 */
/**
 * Register a special class
 */
/**
 * Register default states
 */
/**
 * Register default mobile first states :
 */
/**
 * Set the debug device (not used for now)
 * 
 * @param 	String 		$state 		The state to update
 * @para m 	String 		$device 	The device to use (iphone, etc...)
 */
/**
 * Parent clear each
 */
/**
 * Vertical align :
 */
/**
 * Show inline
 *
 * @param 	String 		$state 		The state name
 */
/**
 * Generate a custom class for all the states
 *
 * @param 	list 	$pattern 		The name pattern of the class
 * @param 	list 	$statesNames 		The states names to generate
 */
/* line 2, ../scss/_else.scss */
html, body {
  height: 100%;
}

/* line 30, ../scss/gridle/_mixins.scss */
html.desktop .page-wrap {
  min-height: 100%;
  margin-bottom: -230px;
}
@media screen and (min-width: 1024px) and (max-width: 99999999px) {
  /* line 6, ../scss/_else.scss */
  .page-wrap {
    min-height: 100%;
    margin-bottom: -230px;
  }
}
/* line 11, ../scss/_else.scss */
.page-wrap:after {
  content: "";
  display: block;
}

/* line 30, ../scss/gridle/_mixins.scss */
html.desktop .site-footer, html.desktop .page-wrap:after {
  height: 230px;
}
@media screen and (min-width: 1024px) and (max-width: 99999999px) {
  /* line 16, ../scss/_else.scss */
  .site-footer, .page-wrap:after {
    height: 230px;
  }
}

/* line 22, ../scss/_else.scss */
footer {
  min-height: 180px;
  padding-top: 130px;
  position: relative;
  background-color: #fff;
  border-top: 5px solid #8C4547;
  z-index: 1;
}
/* line 31, ../scss/_else.scss */
footer .righter {
  position: absolute;
  right: 0;
  bottom: 55px;
  width: 251px;
  height: 387px;
  background: url("../i/footer-right-bg.png") 0 0 no-repeat;
  z-index: 1;
}
/* line 39, ../scss/_else.scss */
footer:before {
  display: block;
  position: absolute;
  width: 100%;
  height: 115px;
  top: 0;
  content: ' ';
  background-image: url(../i/bg-pattern.png);
  background-image: url(../i/bg-pattern.svg), none;
  -webkit-background-size: auto;
  background-size: auto;
  background-position: 0 0;
  background-repeat: repeat;
  z-index: -1;
}
/* line 53, ../scss/_else.scss */
footer:after {
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 25px;
  content: ' ';
  background: url("../i/footer-bg.png") 0 0 repeat-x;
  z-index: 0;
}
/* line 63, ../scss/_else.scss */
footer .item {
  margin-bottom: 30px;
  text-align: center;
  position: relative;
  z-index: 3;
}
/* line 68, ../scss/_else.scss */
footer .item img {
  width: 100%;
}
/* line 73, ../scss/_else.scss */
footer a, footer a:link, footer a:visited {
  color: #0fa3d3;
  font-size: 14px;
  text-decoration: underline;
}
/* line 77, ../scss/_else.scss */
footer a:hover, footer a:link:hover, footer a:visited:hover {
  color: #25bef0;
}
/* line 82, ../scss/_else.scss */
footer .phone {
  color: #0fa3d3;
  font-size: 24px;
  font-weight: bold;
  margin-bottom: 0;
}
/* line 87, ../scss/_else.scss */
footer .phone span {
  color: #63caec;
}
/* line 92, ../scss/_else.scss */
footer a.icon {
  display: block;
  text-align: center;
  line-height: 1;
  font-size: 12px;
}
/* line 97, ../scss/_else.scss */
footer a.icon img {
  width: auto;
  float: none;
}

/* line 104, ../scss/_else.scss */
main {
  min-height: 700px;
  background-color: #fff;
  background-image: -webkit-linear-gradient(top, #f9dde1 0%, #ffffff 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, from(#f9dde1), to(#ffffff));
  background-image: linear-gradient(to bottom, #f9dde1 0%, #ffffff 100%);
  margin-top: -25px;
  padding-top: 80px;
}
/* line 113, ../scss/_else.scss */
main p, main h3 {
  color: #da1757;
  font-size: 15px;
  text-align: center;
  margin-bottom: 20px;
}
/* line 120, ../scss/_else.scss */
main h3 {
  color: #da1757;
  font-size: 17px;
  font-weight: bold;
}
/* line 126, ../scss/_else.scss */
main .item {
  min-height: 260px;
  background-image: url(../i/cloud.png);
  background-image: url(../i/cloud.svg), none;
  -webkit-background-size: contain;
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
  text-align: center;
  margin-bottom: 80px;
  position: relative;
}
/* line 139, ../scss/_else.scss */
main .item:after {
  display: block;
  position: absolute;
  bottom: -45px;
  content: ' ';
  width: 100%;
  height: 130px;
  -webkit-background-size: contain;
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
}
/* line 151, ../scss/_else.scss */
main .item.item--pektin:after {
  background-image: url(../i/pektin.png);
  background-image: url(../i/pektin.svg), none;
}
/* line 156, ../scss/_else.scss */
main .item.item--inulin:after {
  background-image: url(../i/inulin.png);
  background-image: url(../i/inulin.svg), none;
}
/* line 30, ../scss/gridle/_mixins.scss */
html.tablet main .item.item--agar {
  margin-left: 25.0%;
}
/* line 301, ../scss/gridle/_mixins.scss */
.gridle-debug html.tablet main .item.item--agar:after, html.tablet main .item.item--agar.gridle-debug:after {
  content: "prefix-tablet-3" !important;
}
@media screen and (min-width: 481px) and (max-width: 1024px) {
  /* line 161, ../scss/_else.scss */
  main .item.item--agar {
    margin-left: 25.0%;
  }
  /* line 301, ../scss/gridle/_mixins.scss */
  .gridle-debug main .item.item--agar:after, main .item.item--agar.gridle-debug:after {
    content: "prefix-tablet-3" !important;
  }
}
/* line 163, ../scss/_else.scss */
main .item.item--agar:after {
  background-image: url(../i/agar.png);
  background-image: url(../i/agar.svg), none;
}
/* line 169, ../scss/_else.scss */
main .item img {
  width: 70%;
  margin-top: 30px;
}

/* line 176, ../scss/_else.scss */
header {
  position: relative;
}
/* line 180, ../scss/_else.scss */
header:after {
  display: block;
  position: absolute;
  bottom: 25px;
  content: ' ';
  width: 100%;
  height: 5px;
  background-color: #8C4547;
}
/* line 30, ../scss/gridle/_mixins.scss */
html.mobile header .parent .header__np-logo {
  margin-bottom: 40px;
}
@media screen and (max-width: 480px) {
  /* line 191, ../scss/_else.scss */
  header .parent .header__np-logo {
    margin-bottom: 40px;
  }
}
/* line 30, ../scss/gridle/_mixins.scss */
html.mobile header .parent .hide-mobile {
  display: none !important;
}
@media screen and (max-width: 480px) {
  /* line 196, ../scss/_else.scss */
  header .parent .hide-mobile {
    display: none !important;
  }
}
/* line 30, ../scss/gridle/_mixins.scss */
html.default html.mobile header .parent {
  font-size: 0;
  clear: both;
}
/* line 496, ../scss/gridle/_mixins.scss */
html.default html.mobile header .parent > * {
  display: inline-block;
  float: none !important;
  vertical-align: bottom;
  font-size: 1rem;
}
@media screen and (max-width: 99999999px) {
  /* line 30, ../scss/gridle/_mixins.scss */
  html.mobile header .parent {
    font-size: 0;
    clear: both;
  }
  /* line 496, ../scss/gridle/_mixins.scss */
  html.mobile header .parent > * {
    display: inline-block;
    float: none !important;
    vertical-align: bottom;
    font-size: 1rem;
  }
}
@media screen and (max-width: 480px) {
  /* line 30, ../scss/gridle/_mixins.scss */
  html.default header .parent {
    font-size: 0;
    clear: both;
  }
  /* line 496, ../scss/gridle/_mixins.scss */
  html.default header .parent > * {
    display: inline-block;
    float: none !important;
    vertical-align: bottom;
    font-size: 1rem;
  }
}
@media screen and (max-width: 480px) and (max-width: 99999999px) {
  /* line 190, ../scss/_else.scss */
  header .parent {
    font-size: 0;
    clear: both;
  }
  /* line 496, ../scss/gridle/_mixins.scss */
  header .parent > * {
    display: inline-block;
    float: none !important;
    vertical-align: bottom;
    font-size: 1rem;
  }
}

/* line 30, ../scss/gridle/_mixins.scss */
html.default header {
  padding-top: 25px;
}
@media screen and (max-width: 99999999px) {
  /* line 176, ../scss/_else.scss */
  header {
    padding-top: 25px;
  }
}
/* line 30, ../scss/gridle/_mixins.scss */
html.tablet header {
  padding-top: 20px;
}
@media screen and (min-width: 481px) and (max-width: 1024px) {
  /* line 176, ../scss/_else.scss */
  header {
    padding-top: 20px;
  }
}
/* line 30, ../scss/gridle/_mixins.scss */
html.mobile header {
  padding-top: 40px;
}
@media screen and (max-width: 480px) {
  /* line 176, ../scss/_else.scss */
  header {
    padding-top: 40px;
  }
}
/* line 218, ../scss/_else.scss */
header .header__face img, header .header__logo-text img, header .header__np-logo img {
  width: 100%;
}
/* line 30, ../scss/gridle/_mixins.scss */
html.default header .header__logo-text {
  margin-top: 50px;
}
@media screen and (max-width: 99999999px) {
  /* line 233, ../scss/_else.scss */
  header .header__logo-text {
    margin-top: 50px;
  }
}
/* line 30, ../scss/gridle/_mixins.scss */
html.tablet header .header__logo-text {
  margin-top: 20px;
}
@media screen and (min-width: 481px) and (max-width: 1024px) {
  /* line 233, ../scss/_else.scss */
  header .header__logo-text {
    margin-top: 20px;
  }
}
/* line 30, ../scss/gridle/_mixins.scss */
html.mobile header .header__logo-text {
  margin-top: 0;
}
@media screen and (max-width: 480px) {
  /* line 233, ../scss/_else.scss */
  header .header__logo-text {
    margin-top: 0;
  }
}
/* line 246, ../scss/_else.scss */
header .header__np-logo {
  min-height: 80px;
}

/* line 22, ../scss/app.scss */
*, *:before, *:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

/* line 28, ../scss/app.scss */
body {
  font-family: Helvetica, Arial, sans-serif;
  background: white;
  line-height: 150%;
  font-size: 16px;
}

/* line 35, ../scss/app.scss */
a[href^=tel] {
  color: inherit;
  text-decoration: none;
}

/* line 40, ../scss/app.scss */
#wrapper {
  overflow: hidden;
}

/* line 44, ../scss/app.scss */
h1, h2, h3, h4 {
  color: #000;
  font-weight: 200;
  margin-bottom: 30px;
}

/* line 50, ../scss/app.scss */
h1 {
  font-size: 30px;
}

/* line 54, ../scss/app.scss */
p {
  line-height: 120%;
}

/* line 58, ../scss/app.scss */
strong {
  font-weight: bold;
}

/* line 62, ../scss/app.scss */
.right {
  float: right !important;
}

/* line 66, ../scss/app.scss */
.left {
  float: left !important;
}

/* line 70, ../scss/app.scss */
a, input, textarea, .btn {
  outline: none;
}

/* line 74, ../scss/app.scss */
a, a:link, a:visited {
  color: #000;
}
/* line 76, ../scss/app.scss */
a:hover, a:link:hover, a:visited:hover {
  color: #333333;
}

/* line 81, ../scss/app.scss */
.container {
  position: relative;
  z-index: 1;
}
